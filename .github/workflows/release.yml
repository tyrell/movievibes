name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update pom.xml version
      run: |
        mvn versions:set -DnewVersion=${{ steps.version.outputs.VERSION }}
        mvn versions:commit
        
    - name: Run tests
      run: mvn clean test
      
    - name: Build application
      run: mvn clean package -DskipTests
      
    - name: Create Release Notes
      id: release_notes
      run: |
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "## Movie Vibes v${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ðŸŽ¬ What's New" >> $GITHUB_OUTPUT
        echo "- AI-powered movie vibe analysis using Spring AI + Ollama" >> $GITHUB_OUTPUT
        echo "- React frontend with pure CSS design system" >> $GITHUB_OUTPUT
        echo "- Complete movie metadata with poster images" >> $GITHUB_OUTPUT
        echo "- 2-minute timeout support for AI operations" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ðŸš€ Quick Start" >> $GITHUB_OUTPUT
        echo "\`\`\`bash" >> $GITHUB_OUTPUT
        echo "# Download the JAR file from this release" >> $GITHUB_OUTPUT
        echo "java -jar movievibes-${{ steps.version.outputs.VERSION }}.jar" >> $GITHUB_OUTPUT
        echo "\`\`\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ðŸ“‹ Requirements" >> $GITHUB_OUTPUT
        echo "- Java 17 or higher" >> $GITHUB_OUTPUT
        echo "- Ollama running locally (for AI functionality)" >> $GITHUB_OUTPUT
        echo "- OMDb API key (set as OMDB_API_KEY environment variable)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ðŸ”— Links" >> $GITHUB_OUTPUT
        echo "- [Documentation](https://github.com/tyrell/movievibes#readme)" >> $GITHUB_OUTPUT
        echo "- [Frontend Setup](https://github.com/tyrell/movievibes#frontend-setup)" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Movie Vibes v${{ steps.version.outputs.VERSION }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        files: |
          target/movievibes-${{ steps.version.outputs.VERSION }}.jar
        draft: false
        prerelease: false
        generate_release_notes: true
        
    - name: Publish to GitHub Packages
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
